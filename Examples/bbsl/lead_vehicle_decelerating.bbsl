exfunction
//前方車両の存在をチェック, あれば、true を返す
前方車両がある ():bool
//前方車両の boundingbox を返す
前方車両 ():bb
//追従するだけで問題ない範囲の boundingbox を返す
追従区間 ():bb
//減速する必要のある範囲の boundingbox を返す
減速区間 ():bb
endexfunction

condition
[前方車両がある ()]
endcondition

case 追従
let 前方車両:bb = 前方車両(), 追従区間:bb = 追従区間() in
PROJy (前方車両)≈PROJy (追従区間)
endcase

case 減速
let 前方車両:bb = 前方車両(), 減速区間:bb = 減速区間() in
PROJy (前方車両)≈PROJy (減速区間)
endcase

case 停止
let 前方車両:bb = 前方車両(), 追従区間:bb = 追従区間(),
減速区間:bb = 減速区間() in PROJy(前方車両)<PROJy(追従区間) and PROJy (前方車両)<PROJy (減速区間)
endcase

case レスポンス無し
let 前方車両:bb = 前方車両(), 追従区間:bb = 追従区間(), 減速区間:bb = 減速区間() in
PROJy(前方車両)>PROJy(追従区間) and
PROJy (前方車両)>PROJy (減速区間)
endcase